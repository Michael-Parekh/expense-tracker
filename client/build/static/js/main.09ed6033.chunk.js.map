{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","utils/format.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","loading","transactions","payload","filter","transaction","_id","error","initialState","id","text","amount","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","a","axios","get","res","data","response","delete","config","headers","post","Provider","value","getTransactions","deleteTransaction","addTransaction","numberWithCommas","x","toString","replace","Balance","total","useContext","map","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","Math","abs","onClick","TransactionList","useEffect","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09ed6033.chunk.js","sourcesContent":["import React from 'react'\n\nexport const Header = () => {\n  return (\n    <h2>\n      Expense Tracker\n    </h2>\n  )\n}\n","// The reducer specifies the application state changes in response to certain actions to the store (context).\nexport default (state, action) => {\n  switch(action.type) {\n\n    case 'GET_TRANSACTIONS':\n      return {\n        ...state,\n        loading: false,\n        transactions: action.payload\n      }\n\n    case 'DELETE_TRANSACTION':\n      return {\n        // Return the current state.\n        ...state,\n        // Return the new array of transactions (all of them except for the one with an ID matching the removed transaction).\n        transactions: state.transactions.filter(transaction => transaction._id !== action.payload)\n      }\n\n    case 'ADD_TRANSACTION':\n      return {\n        ...state,\n        // Return the new array of transactions by adding the payload onto the existing transactions in the state.\n        transactions: [...state.transactions, action.payload]\n      }\n\n    case 'TRANSACTION_ERROR':\n      return {\n        ...state,\n        error: action.payload\n      }\n\n    default:\n      return state;\n  }\n}\n","import React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios';\n\n// Initial State:\nconst initialState = {\n  transactions: [\n    { id: 3, text: 'Book', amount: -10 },\n    { id: 4, text: 'Camera', amount: 150 }\n  ],\n  error: null,\n  // Used to keep track of when to start/stop the loading spinner.\n  loading: true\n}\n\n// Create Context:\nexport const GlobalContext = createContext(initialState);\n\n// Provider Component (needs to wrap components so that it can access the state):\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n\n  // Actions (will make calls to the reducer):\n  async function getTransactions() {\n    try {\n      const res = await axios.get('/api/v1/transactions');\n\n      dispatch({\n        type: 'GET_TRANSACTIONS',\n        payload: res.data.data\n      });\n\n    } catch (err) {\n        dispatch({\n          type: 'TRANSACTION_ERROR',\n          payload: err.response.data.error\n        });\n    }\n  }\n\n  async function deleteTransaction(id) {\n    try {\n      // Delete the transaction from the server before deleting it from the state through the reducer.\n      await axios.delete(`/api/v1/transactions/${id}`);\n\n      dispatch({\n        type: 'DELETE_TRANSACTION',\n        payload: id\n      });\n\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  async function addTransaction(transaction) {\n    // Need to specify a content type when sending data to the server.\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/v1/transactions', transaction, config);\n\n      dispatch({\n        type: 'ADD_TRANSACTION',\n        payload: res.data.data\n      });\n\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n\n  return (<GlobalContext.Provider value={{\n    transactions: state.transactions,\n    error: state.error,\n    loading: state.loading,\n    getTransactions,\n    deleteTransaction,\n    addTransaction\n  }}>\n    {children}\n  </GlobalContext.Provider>);\n}\n","// Contains any specific formatting for the user interface of the program.\nexport function numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { numberWithCommas } from '../utils/format';\n\nexport const Balance = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map(transaction => transaction.amount);\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n\n  return (\n    <>\n      <h4>Your Balance</h4>\n      <h1>${numberWithCommas(total)}</h1>\n    </>\n  )\n}\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { numberWithCommas } from '../utils/format';\n\nexport const IncomeExpenses = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map(transaction => transaction.amount);\n\n  const income = amounts\n    .filter(item => item > 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n  const expense = (\n    amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\n    -1\n  ).toFixed(2);\n\n  return (\n    <div className=\"inc-exp-container\">\n      <div>\n        <h4>Income</h4>\n        <p className=\"money plus\">+${numberWithCommas(income)}</p>\n      </div>\n      <div>\n        <h4>Expense</h4>\n        <p className=\"money minus\">-${numberWithCommas(expense)}</p>\n      </div>\n    </div>\n  )\n}\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState'\nimport { numberWithCommas } from '../utils/format';\n\nexport const Transaction = ({ transaction }) => {\n  const { deleteTransaction } = useContext(GlobalContext);\n\n  const sign = transaction.amount < 0 ? '-' : '+';\n\n  return (\n    // Use a ternary operator to determine the className based on the transaction amount (so that the border color is dynamic).\n    <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\n      {transaction.text} <span>{sign}${numberWithCommas(Math.abs(transaction.amount))}</span>\n      <button onClick={() => deleteTransaction(transaction._id)} className=\"delete-btn\">x</button>\n    </li>\n  )\n}\n","import React, { useContext, useEffect } from 'react'\nimport { GlobalContext } from '../context/GlobalState'\nimport { Transaction } from './Transaction';\n\nexport const TransactionList = () => {\n  const { transactions, getTransactions } = useContext(GlobalContext);\n\n  // Use the \"useEffect\" hook if you are making an HTTP request in a component.\n  useEffect(() => {\n    getTransactions();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <h3>History</h3>\n        <ul className=\"list\">\n          {transactions.map(transaction => (\n            // Render a new Transaction component and pass in a prop so it knows which Transaction to render.\n            <Transaction key={transaction.id} transaction={transaction} />\n          ))}\n        </ul>\n    </>\n  )\n}\n","import React, { useState, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState'\n\nexport const AddTransaction = () => {\n  // Create the initial states for the text and amount of the transaction.\n  const [text, setText] = useState('')\n  const [amount, setAmount] = useState(0)\n\n  const { addTransaction } = useContext(GlobalContext);\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    const newTransaction = {\n      id: Math.floor(Math.random() * 100000000),\n      text: text,\n      // Convert the amount from a String to an Integer.\n      amount: +amount\n    }\n\n    addTransaction(newTransaction);\n  }\n\n  return (\n    <>\n      <h3>Add new transaction</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-control\">\n          <label htmlFor=\"text\">Text</label>\n          <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter text...\" />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\"\n            >Amount <br />\n            (negative - expense, positive - income)</label\n          >\n          <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} placeholder=\"Enter amount...\" />\n        </div>\n        <button className=\"btn\">Add transaction</button>\n      </form>\n    </>\n  )\n}\n","import React from 'react';\nimport './App.css';\n\nimport { Header } from './components/Header';\nimport { Balance } from './components/Balance';\nimport { IncomeExpenses } from './components/IncomeExpenses';\nimport { TransactionList } from './components/TransactionList';\nimport { AddTransaction } from './components/AddTransaction';\n\nimport { GlobalProvider } from './context/GlobalState';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}